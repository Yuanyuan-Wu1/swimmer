{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to attach token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authApi = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me')\n};\nexport const performanceApi = {\n  getPerformances: async event => {\n    const response = await api.get(`/performance/performances/${event}`);\n    return response.data;\n  },\n  addPerformance: async data => {\n    const response = await api.post('/performance/performances', data);\n    return response.data;\n  },\n  updatePerformance: (id, data) => api.put(`/performance/performances/${id}`, data),\n  deletePerformance: id => api.delete(`/performance/performances/${id}`)\n};\nexport const medalApi = {\n  getMedals: async () => {\n    const response = await api.get('/medal/medals');\n    return response.data;\n  },\n  addMedal: data => api.post('/medal/medals', data),\n  updateMedal: (id, data) => api.put(`/medal/medals/${id}`, data),\n  deleteMedal: id => api.delete(`/medal/medals/${id}`)\n};\nexport const trainingApi = {\n  getActivePlan: async () => {\n    const response = await api.get('/training-plan/active');\n    return response.data;\n  },\n  generatePlan: data => api.post('/training-plan/generate', data),\n  updatePlan: (id, data) => api.put(`/training-plan/${id}`, data),\n  deletePlan: id => api.delete(`/training-plan/${id}`),\n  createPlan: async planData => {\n    const response = await api.post('/training-plan/create', planData);\n    return response.data;\n  }\n};\nexport const dashboardApi = {\n  getRecentPerformances: async () => {\n    const response = await api.get('/performance/recent');\n    return response.data;\n  },\n  getUpcomingEvents: async () => {\n    const response = await api.get('/events/upcoming');\n    return response.data;\n  },\n  getMedalSummary: async () => {\n    const response = await api.get('/medal/summary');\n    return response.data;\n  },\n  getTrainingProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data;\n  },\n  getFinaPoints: async () => {\n    const response = await api.get('/performance/fina-points');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authApi","login","credentials","post","data","register","userData","logout","getCurrentUser","get","performanceApi","getPerformances","event","addPerformance","updatePerformance","id","put","deletePerformance","delete","medalApi","getMedals","addMedal","updateMedal","deleteMedal","trainingApi","getActivePlan","generatePlan","updatePlan","deletePlan","createPlan","planData","dashboardApi","getRecentPerformances","getUpcomingEvents","getMedalSummary","getTrainingProgress","getFinaPoints"],"sources":["/Users/yoyowu/NEU/swimmer/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to attach token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authApi = {\n  login: async (credentials) => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me'),\n};\n\nexport const performanceApi = {\n  getPerformances: async (event) => {\n    const response = await api.get(`/performance/performances/${event}`);\n    return response.data;\n  },\n  addPerformance: async (data) => {\n    const response = await api.post('/performance/performances', data);\n    return response.data;\n  },\n  updatePerformance: (id, data) => api.put(`/performance/performances/${id}`, data),\n  deletePerformance: (id) => api.delete(`/performance/performances/${id}`),\n};\n\nexport const medalApi = {\n  getMedals: async () => {\n    const response = await api.get('/medal/medals');\n    return response.data;\n  },\n  addMedal: (data) => api.post('/medal/medals', data),\n  updateMedal: (id, data) => api.put(`/medal/medals/${id}`, data),\n  deleteMedal: (id) => api.delete(`/medal/medals/${id}`),\n};\n\nexport const trainingApi = {\n  getActivePlan: async () => {\n    const response = await api.get('/training-plan/active');\n    return response.data;\n  },\n  generatePlan: (data) => api.post('/training-plan/generate', data),\n  updatePlan: (id, data) => api.put(`/training-plan/${id}`, data),\n  deletePlan: (id) => api.delete(`/training-plan/${id}`),\n  createPlan: async (planData) => {\n    const response = await api.post('/training-plan/create', planData);\n    return response.data;\n  }\n};\n\nexport const dashboardApi = {\n  getRecentPerformances: async () => {\n    const response = await api.get('/performance/recent');\n    return response.data;\n  },\n  getUpcomingEvents: async () => {\n    const response = await api.get('/events/upcoming');\n    return response.data;\n  },\n  getMedalSummary: async () => {\n    const response = await api.get('/medal/summary');\n    return response.data;\n  },\n  getTrainingProgress: async () => {\n    const response = await api.get('/training/progress');\n    return response.data;\n  },\n  getFinaPoints: async () => {\n    const response = await api.get('/performance/fina-points');\n    return response.data;\n  }\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMT,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAC3D,OAAOT,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMb,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC3D,OAAOb,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDG,MAAM,EAAEA,CAAA,KAAM7B,GAAG,CAACyB,IAAI,CAAC,cAAc,CAAC;EACtCK,cAAc,EAAEA,CAAA,KAAM9B,GAAG,CAAC+B,GAAG,CAAC,UAAU;AAC1C,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG;EAC5BC,eAAe,EAAE,MAAOC,KAAK,IAAK;IAChC,MAAMnB,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,6BAA6BG,KAAK,EAAE,CAAC;IACpE,OAAOnB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDS,cAAc,EAAE,MAAOT,IAAI,IAAK;IAC9B,MAAMX,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,2BAA2B,EAAEC,IAAI,CAAC;IAClE,OAAOX,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDU,iBAAiB,EAAEA,CAACC,EAAE,EAAEX,IAAI,KAAK1B,GAAG,CAACsC,GAAG,CAAC,6BAA6BD,EAAE,EAAE,EAAEX,IAAI,CAAC;EACjFa,iBAAiB,EAAGF,EAAE,IAAKrC,GAAG,CAACwC,MAAM,CAAC,6BAA6BH,EAAE,EAAE;AACzE,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAG;EACtBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAM3B,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDiB,QAAQ,EAAGjB,IAAI,IAAK1B,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAEC,IAAI,CAAC;EACnDkB,WAAW,EAAEA,CAACP,EAAE,EAAEX,IAAI,KAAK1B,GAAG,CAACsC,GAAG,CAAC,iBAAiBD,EAAE,EAAE,EAAEX,IAAI,CAAC;EAC/DmB,WAAW,EAAGR,EAAE,IAAKrC,GAAG,CAACwC,MAAM,CAAC,iBAAiBH,EAAE,EAAE;AACvD,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG;EACzBC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMhC,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,uBAAuB,CAAC;IACvD,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDsB,YAAY,EAAGtB,IAAI,IAAK1B,GAAG,CAACyB,IAAI,CAAC,yBAAyB,EAAEC,IAAI,CAAC;EACjEuB,UAAU,EAAEA,CAACZ,EAAE,EAAEX,IAAI,KAAK1B,GAAG,CAACsC,GAAG,CAAC,kBAAkBD,EAAE,EAAE,EAAEX,IAAI,CAAC;EAC/DwB,UAAU,EAAGb,EAAE,IAAKrC,GAAG,CAACwC,MAAM,CAAC,kBAAkBH,EAAE,EAAE,CAAC;EACtDc,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMrC,QAAQ,GAAG,MAAMf,GAAG,CAACyB,IAAI,CAAC,uBAAuB,EAAE2B,QAAQ,CAAC;IAClE,OAAOrC,QAAQ,CAACW,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAM2B,YAAY,GAAG;EAC1BC,qBAAqB,EAAE,MAAAA,CAAA,KAAY;IACjC,MAAMvC,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACD6B,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,MAAMxC,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACD8B,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,MAAMzC,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,gBAAgB,CAAC;IAChD,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACD+B,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC/B,MAAM1C,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,oBAAoB,CAAC;IACpD,OAAOhB,QAAQ,CAACW,IAAI;EACtB,CAAC;EACDgC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAM3C,QAAQ,GAAG,MAAMf,GAAG,CAAC+B,GAAG,CAAC,0BAA0B,CAAC;IAC1D,OAAOhB,QAAQ,CAACW,IAAI;EACtB;AACF,CAAC;AAED,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}